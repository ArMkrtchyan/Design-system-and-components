package am.acba.components.mainScreen

import am.acba.components.R

enum class ComponentTypeEnum(val componentName: String, val isCompose: Boolean, val navigationId: Int, val isReady: Boolean = false) {
    ALERTS("Alerts", false, R.id.alertsFragment),
    ALERTS_COMPOSE("Alerts", true, R.id.alertsComposeFragment, isReady = true),
    BADGES("Badges", false, R.id.badgesFragment),
    BADGES_COMPOSE("Badges", true, R.id.badgesComposeFragment, isReady = true),
    BANNERS("Banners", false, R.id.bannersFragment),
    BANNERS_COMPOSE("Banners", true, R.id.bannersComposeFragment),
    BOTTOM_SHEET("Bottom sheet", false, R.id.bottomSheetFragment),
    BOTTOM_SHEET_COMPOSE("Bottom sheet", true, R.id.bottomSheetComposeFragment, isReady = true),
    BUTTONS("Buttons", false, R.id.buttonsFragment),
    BUTTONS_COMPOSE("Buttons", true, R.id.buttonsComposeFragment, isReady = true),
    CARD_INPUT("Card input", false, R.id.cardInputFragment),
    CARD_INPUT_COMPOSE("Card input", true, R.id.cardInputComposeFragment, isReady = true),
    CARD_LISTING("Card listing", false, R.id.cardListingFragment),
    CARD_LISTING_COMPOSE("Card listing", true, R.id.cardListingComposeFragment, isReady = true),
    CHIPS("Chips", false, R.id.chipsFragment),
    CHIPS_COMPOSE("Chips", true, R.id.chipsComposeFragment, isReady = true),
    CONTROLS("Controls", false, R.id.controlsFragment),
    CONTROLS_COMPOSE("Controls", true, R.id.controlsComposeFragment, isReady = true),
    CURRENCY_INPUT("Currency input", false, R.id.currencyInputFragment),
    CURRENCY_INPUT_COMPOSE("Currency input", true, R.id.currencyInputComposeFragment, isReady = true),
    DATE_PICKER("Date picker and Calendar", false, R.id.datePickerFragment),
    DATE_PICKER_COMPOSE("Date picker and Calendar", true, R.id.datePickerComposeFragment),
    DIALOGS("Dialogs", false, R.id.dialogsFragment),
    DIALOGS_COMPOSE("Dialogs", true, R.id.dialogsComposeFragment, isReady = true),
    DIVIDER("Dividers", false, R.id.dividerFragment),
    DIVIDER_COMPOSE("Dividers", true, R.id.dividerComposeFragment, isReady = true),
    DROP_DOWN("Drop downs", false, R.id.dropDownFragment),
    DROP_DOWN_COMPOSE("Drop downs", true, R.id.dropDownComposeFragment),
    EMPTY_SCREEN("Empty screen", false, R.id.emptyStateFragment),
    EMPTY_SCREEN_COMPOSE("Empty screen", true, R.id.emptyStateComposeFragment, isReady = true),
    EXCHANGE("Exchange", false, R.id.exchangeFragment),
    EXPANDABLE_CARD_COMPOSE("Expandable Card", true, R.id.expandableCardComposeFragment, isReady = true),
    EXPANDABLE_VIEW("Expandable view", false, R.id.expandableViewFragment),
    EXPANDABLE_VIEW_COMPOSE("Expandable view", true, R.id.expandableViewComposeFragment, isReady = true),
    INPUTS("Inputs", false, R.id.inputsFragment),
    INPUTS_COMPOSE("Inputs", true, R.id.inputsComposeFragment, isReady = true),
    LIST_ITEMS("List items", false, R.id.listItemFragment),
    LIST_ITEMS_2("List items 2", false, R.id.listItem2Fragment),
    LIST_ITEMS_COMPOSE("List items", true, R.id.listItemComposeFragment, isReady = true),
    OFFERS_COMPONENTS("Offers components", false, R.id.offersFragment),
    OFFERS_COMPONENTS_COMPOSE("Offers components", true, R.id.offersComposeFragment, isReady = true),
    ONBOARDING_TOOLTIPS("Onboarding tooltips", false, R.id.tooltipFragment),
    ONBOARDING_TOOLTIPS_COMPOSE("Onboarding tooltips", true, R.id.tooltipComposeFragment),
    PHONE_NUMBER_INPUT("Phone number input", false, R.id.phoneNumberInputFragment),
    PHONE_NUMBER_INPUT_COMPOSE("Phone number input", true, R.id.phoneNumberInputComposeFragment),
    PIN_INPUT("Pin input", false, R.id.pinInputFragment),
    PIN_INPUT_COMPOSE("Pin input", true, R.id.pinInputComposeFragment),
    PRIMARY_TAB_LAYOUT("Primary Tab", false, R.id.tabLayoutFragment),
    PRIMARY_TAB_LAYOUT_COMPOSE("Primary Tab", true, R.id.tabLayoutComposeFragment),
    PRODUCT_CARD_VIEW("Product Card view component", false, R.id.cardViewFragment),
    PRODUCT_CARD_VIEW_COMPOSE("Product Card component", true, R.id.productCardScreenComposeFragment, isReady = true),
    PRODUCT_DESCRIPTION_CARD("Product description card", false, R.id.productDescriptionCardFragment),
    PRODUCT_DESCRIPTION_CARD_COMPOSE("Product description card", true, R.id.productDescriptionCardComposeFragment),
    PROGRESS_CARD_VIEW("Progress View", false, R.id.progressCardViewFragment),
    PROGRESS_CARD_VIEW_COMPOSE("Progress View", true, R.id.progressCardViewComposeFragment),
    PROGRESS_INDICATOR("Progress indicator", false, R.id.progressIndicatorFragment),
    PROGRESS_INDICATOR_COMPOSE("Progress indicator", true, R.id.progressIndicatorComposeFragment),
    QUICK_ACTION_AVATAR("Quick actions and avatar", false, R.id.quickActionAndAvatarFragment),
    QUICK_ACTION_AVATAR_COMPOSE("Quick actions and avatar", true, R.id.quickActionAndAvatarComposeFragment, isReady = true),
    SEARCH_INPUT("Search input", false, R.id.searchInputFragment),
    SNACK_BAR("SnackBar", false, R.id.snackBarFragment),
    SNACK_BAR_COMPOSE("SnackBar", true, R.id.snackBarComposeFragment),
    STATUS_SCREEN("Status screen", false, R.id.statusScreenFragment),
    STATUS_SCREEN_COMPOSE("Status screen", true, R.id.statusScreenComposeFragment),
    TABLES("Tables", false, R.id.tablesFragment),
    TABLES_COMPOSE("Tables", true, R.id.tablesComposeFragment, isReady = true),
    TIME_LINE("TimeLine", false, R.id.timeLineFragment),
    TIME_LINE_COMPOSE("TimeLine", true, R.id.timeLineComposeFragment, isReady = true),
    TOOLBAR("Toolbar", false, R.id.toolbarFragment),
    TOOLBAR_COMPOSE("Toolbar", true, R.id.toolbarComposeFragment, isReady = true);

    companion object {
        fun getComponentsList(isCompose: Boolean) =
            entries.filter { it.isCompose == isCompose }.map { Component(it, it.componentName, navigationId = it.navigationId, isReady = it.isReady || !it.isCompose) }
    }
}